package se.jocke.nb.eslint.ui.options;

import java.io.File;
import org.openide.util.NbBundle;

final class ESLintPanel extends javax.swing.JPanel {
    ESLintPanel() {
        initComponents();

        this.radEslintAutomaticConfig.setVisible(false);
    }

    @Override
    public void addNotify() {
        super.addNotify();
    }

    @Override
    public void removeNotify() {
        super.removeNotify();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        radBtnGroupEslintConfig = new javax.swing.ButtonGroup();
        lblEslintCli = new javax.swing.JLabel();
        txtEslintPath = new javax.swing.JTextField();
        btnBrowseEslintPath = new javax.swing.JButton();
        lblCustomConfig = new javax.swing.JLabel();
        txtCustomConfigPath = new javax.swing.JTextField();
        btnBrowseCustomConfig = new javax.swing.JButton();
        btnSearchEslintPath = new javax.swing.JButton();
        lblEslintPathDescription = new javax.swing.JLabel();
        txtFileExtensionsRegEx = new javax.swing.JTextField();
        lblEslintFileExtensionsRegEx = new javax.swing.JLabel();
        lblCustomConfigDescription = new javax.swing.JLabel();
        chbUseCustomConfig = new javax.swing.JCheckBox();
        radEslintDisable = new javax.swing.JRadioButton();
        radEslintManualConfig = new javax.swing.JRadioButton();
        radEslintAutomaticConfig = new javax.swing.JRadioButton();

        fileChooser.setDialogTitle(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.fileChooser.dialogTitle")); // NOI18N
        fileChooser.setFileFilter(null);
        fileChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        org.openide.awt.Mnemonics.setLocalizedText(lblEslintCli, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.lblEslintCli.text")); // NOI18N
        lblEslintCli.setEnabled(false);

        txtEslintPath.setText(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.txtEslintPath.text")); // NOI18N
        txtEslintPath.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(btnBrowseEslintPath, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.btnBrowseEslintPath.text")); // NOI18N
        btnBrowseEslintPath.setEnabled(false);
        btnBrowseEslintPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseEslintPathActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblCustomConfig, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.lblCustomConfig.text")); // NOI18N
        lblCustomConfig.setEnabled(false);

        txtCustomConfigPath.setText(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.txtCustomConfigPath.text")); // NOI18N
        txtCustomConfigPath.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(btnBrowseCustomConfig, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.btnBrowseCustomConfig.text")); // NOI18N
        btnBrowseCustomConfig.setEnabled(false);
        btnBrowseCustomConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseCustomConfigActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnSearchEslintPath, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.btnSearchEslintPath.text")); // NOI18N
        btnSearchEslintPath.setEnabled(false);
        btnSearchEslintPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchEslintPathActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblEslintPathDescription, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.lblEslintPathDescription.text")); // NOI18N
        lblEslintPathDescription.setEnabled(false);

        txtFileExtensionsRegEx.setText(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.txtFileExtensionsRegEx.text")); // NOI18N
        txtFileExtensionsRegEx.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(lblEslintFileExtensionsRegEx, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.lblEslintFileExtensionsRegEx.text")); // NOI18N
        lblEslintFileExtensionsRegEx.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(lblCustomConfigDescription, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.lblCustomConfigDescription.text")); // NOI18N
        lblCustomConfigDescription.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(chbUseCustomConfig, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.chbUseCustomConfig.text")); // NOI18N
        chbUseCustomConfig.setEnabled(false);
        chbUseCustomConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbUseCustomConfigActionPerformed(evt);
            }
        });

        radBtnGroupEslintConfig.add(radEslintDisable);
        radEslintDisable.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(radEslintDisable, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.radEslintDisable.text")); // NOI18N
        radEslintDisable.setActionCommand(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.radEslintDisable.actionCommand")); // NOI18N

        radBtnGroupEslintConfig.add(radEslintManualConfig);
        org.openide.awt.Mnemonics.setLocalizedText(radEslintManualConfig, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.radEslintManualConfig.text")); // NOI18N
        radEslintManualConfig.setActionCommand(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.radEslintManualConfig.actionCommand")); // NOI18N

        radBtnGroupEslintConfig.add(radEslintAutomaticConfig);
        org.openide.awt.Mnemonics.setLocalizedText(radEslintAutomaticConfig, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.radEslintAutomaticConfig.text")); // NOI18N
        radEslintAutomaticConfig.setActionCommand(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.radEslintAutomaticConfig.actionCommand")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radEslintDisable)
                    .addComponent(radEslintManualConfig)
                    .addComponent(radEslintAutomaticConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEslintCli)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblEslintPathDescription)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txtEslintPath)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBrowseEslintPath, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchEslintPath)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCustomConfig)
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCustomConfigDescription)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCustomConfigPath, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBrowseCustomConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblEslintFileExtensionsRegEx)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFileExtensionsRegEx, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(chbUseCustomConfig))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radEslintDisable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radEslintAutomaticConfig)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radEslintManualConfig)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEslintPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseEslintPath)
                    .addComponent(btnSearchEslintPath)
                    .addComponent(lblEslintCli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEslintPathDescription)
                .addGap(12, 12, 12)
                .addComponent(chbUseCustomConfig)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCustomConfigPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseCustomConfig)
                    .addComponent(lblCustomConfig))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCustomConfigDescription)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFileExtensionsRegEx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEslintFileExtensionsRegEx))
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseEslintPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseEslintPathActionPerformed
//        int returnVal = fileChooser.showOpenDialog(this);
//        if (returnVal == JFileChooser.APPROVE_OPTION) {
//            eslintPathTextField.setText(fileChooser.getSelectedFile().getPath());
//        }
    }//GEN-LAST:event_btnBrowseEslintPathActionPerformed

    private void btnBrowseCustomConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseCustomConfigActionPerformed
//        int returnVal = fileChooser.showOpenDialog(this);
//        if (returnVal == JFileChooser.APPROVE_OPTION) {
//            confTextField.setText(fileChooser.getSelectedFile().getPath());
//        }
    }//GEN-LAST:event_btnBrowseCustomConfigActionPerformed

    @NbBundle.Messages("ESLintOptionsPanel.executable.notFound=No ESLint executable found.")
    private void btnSearchEslintPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchEslintPathActionPerformed
//        List<String> ngCliPaths = FileUtils.findFileOnUsersPath(ESLint.ESLINT_CLI_NAME);
//
//        if (ngCliPaths.isEmpty()) {
//            StatusDisplayer.getDefault().setStatusText(Bundle.ESLintOptionsPanel_executable_notFound());
//        } else {
//            eslintPathTextField.setText(ngCliPaths.get(0));
//        }
    }//GEN-LAST:event_btnSearchEslintPathActionPerformed

    private void chbUseCustomConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbUseCustomConfigActionPerformed
//        confTextField.setEnabled(useCustomConfig.isSelected());
//        eslintConfigLabel.setEnabled(useCustomConfig.isSelected());
//        configDescriptionLabel.setEnabled(useCustomConfig.isSelected());
//        browseConfButton.setEnabled(useCustomConfig.isSelected());
    }//GEN-LAST:event_chbUseCustomConfigActionPerformed

    boolean valid() {
        File exec;
        try {
            exec = new File(txtEslintPath.getText());
        } catch (Exception e) {
            return false;
        }
        return exec.exists() && exec.canExecute();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnBrowseCustomConfig;
    public javax.swing.JButton btnBrowseEslintPath;
    public javax.swing.JButton btnSearchEslintPath;
    public javax.swing.JCheckBox chbUseCustomConfig;
    public javax.swing.JFileChooser fileChooser;
    public javax.swing.JLabel lblCustomConfig;
    public javax.swing.JLabel lblCustomConfigDescription;
    public javax.swing.JLabel lblEslintCli;
    public javax.swing.JLabel lblEslintFileExtensionsRegEx;
    public javax.swing.JLabel lblEslintPathDescription;
    public javax.swing.ButtonGroup radBtnGroupEslintConfig;
    public javax.swing.JRadioButton radEslintAutomaticConfig;
    public javax.swing.JRadioButton radEslintDisable;
    public javax.swing.JRadioButton radEslintManualConfig;
    public javax.swing.JTextField txtCustomConfigPath;
    public javax.swing.JTextField txtEslintPath;
    public javax.swing.JTextField txtFileExtensionsRegEx;
    // End of variables declaration//GEN-END:variables
}
